import Head from "next/head";
import Image from "next/image";
import About from "../components/About";
import Certifications from "../components/Certifications";
import Contact from "../components/Contact";
import Main from "../components/Main";
import Navbar from "../components/Navbar";
import Experience from "../components/Experiences";
import Volunteer from "../components/Volunteer";
import Skills from "../components/Skills";
import { useState, useEffect } from "react";
import { LineWave } from "react-loader-spinner";
import { fetcher } from "../lib/api";

// Define fetchWithRetry function outside of the component
const fetchWithRetry = async (
  url,
  options = {},
  retries = 5,
  backoff = 5000
) => {
  for (let i = 0; i < retries; i++) {
    try {
      const response = await fetch(url, options);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      const data = await response.json();
      return data;
    } catch (error) {
      console.error(`Attempt ${i + 1} failed: ${error.message}`);
      if (i < retries - 1) {
        await new Promise((res) => setTimeout(res, backoff));
        backoff *= 2; // Exponential backoff
      } else {
        throw error;
      }
    }
  }
};

export default function Home({ data }) {
  return (
    <div>
      <Head>
        <title>Joades</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Main title={data.title} subTitle={data.subTitle} />
      <About
        aboutDesc={data.about.aboutDescription}
        aboutImg={data.about.aboutImage}
      />
      <Experience experience={data.experience} />
      <Skills skills={data.skills} />
      <Certifications certifications={data.certifications} />
      <Volunteer volunteerExperience={data.volunteerExperience} />
      <Contact />
    </div>
  );
}

export async function getServerSideProps() {
  try {
    const response = await fetchWithRetry(
      `${process.env.NEXT_PUBLIC_BASEURL}/api/home-page`
    );

    return {
      props: {
        data: response.data.attributes,
      },
    };
  } catch (error) {
    console.error("Error fetching data:", error);

    return {
      props: {
        data: null,
        error: "Failed to load data after multiple retries",
      },
    };
  }
}
